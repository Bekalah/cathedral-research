name: 🏛️ Cathedral Research - Deploy to GitHub Pages

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📦 Install Dependencies
      run: |
        if [ -f package.json ]; then
          npm ci || npm install
        fi

    - name: 🔍 Validate HTML Files
      run: |
        echo "🔍 Validating HTML files..."
        find . -name "*.html" -type f | while read file; do
          echo "Checking: $file"
          # Basic HTML validation
          if ! grep -q "<!DOCTYPE" "$file"; then
            echo "⚠️ Missing DOCTYPE in $file"
          fi
          if ! grep -q "</html>" "$file"; then
            echo "⚠️ Missing closing html tag in $file"
          fi
        done

    - name: 🧹 Check JavaScript Syntax
      run: |
        echo "🧹 Checking JavaScript syntax..."
        find . -name "*.js" -type f | while read file; do
          echo "Checking: $file"
          # Use node to check syntax
          node -c "$file" || echo "❌ Syntax error in $file"
        done

    - name: 📝 Validate JSON Files
      run: |
        echo "📝 Validating JSON files..."
        find . -name "*.json" -type f | while read file; do
          echo "Checking: $file"
          # Use node to validate JSON
          node -e "try { JSON.parse(require('fs').readFileSync('$file', 'utf8')); console.log('✅ Valid: $file'); } catch(e) { console.log('❌ Invalid JSON in $file:', e.message); }"
        done

    - name: 🏗️ Build Site
      run: |
        echo "🏗️ Building Cathedral Research site..."
        
        # Create build directory structure
        mkdir -p dist
        mkdir -p dist/apps
        mkdir -p dist/packages
        mkdir -p dist/research
        mkdir -p dist/tools
        mkdir -p dist/assets
        
        # Copy main public files
        cp -r public/* dist/ 2>/dev/null || true
        
        # Copy research files
        cp -r research/* dist/research/ 2>/dev/null || true
        
        # Copy app files (static content)
        for app in apps/*/; do
          if [ -d "$app" ]; then
            app_name=$(basename "$app")
            mkdir -p "dist/apps/$app_name"
            # Copy static files if they exist
            if [ -d "$app/public" ]; then
              cp -r "$app/public"/* "dist/apps/$app_name/" 2>/dev/null || true
            fi
            if [ -d "$app/dist" ]; then
              cp -r "$app/dist"/* "dist/apps/$app_name/" 2>/dev/null || true
            fi
          fi
        done
        
        # Copy package assets if they exist
        for pkg in packages/*/; do
          if [ -d "$pkg" ]; then
            pkg_name=$(basename "$pkg")
            mkdir -p "dist/packages/$pkg_name"
            # Copy static files if they exist
            if [ -d "$pkg/public" ]; then
              cp -r "$pkg/public"/* "dist/packages/$pkg_name/" 2>/dev/null || true
            fi
            if [ -d "$pkg/dist" ]; then
              cp -r "$pkg/dist"/* "dist/packages/$pkg_name/" 2>/dev/null || true
            fi
          fi
        done
        
        # Create index.html if it doesn't exist
        if [ ! -f dist/index.html ]; then
          cat > dist/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>🏛️ Cathedral Research</title>
            <style>
                body { 
                    font-family: 'Georgia', serif; 
                    background: linear-gradient(135deg, #1a1240, #0a0a0f);
                    color: #c9c9d6;
                    margin: 0;
                    padding: 40px;
                    min-height: 100vh;
                }
                .container { 
                    max-width: 1200px; 
                    margin: 0 auto; 
                    text-align: center;
                }
                h1 { 
                    font-size: 3em; 
                    margin-bottom: 20px;
                    background: linear-gradient(45deg, #f4d03f, #ff69b4);
                    -webkit-background-clip: text;
                    background-clip: text;
                    -webkit-text-fill-color: transparent;
                }
                .links { 
                    display: grid; 
                    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); 
                    gap: 20px; 
                    margin-top: 40px;
                }
                .link-card {
                    background: rgba(74, 52, 86, 0.8);
                    padding: 30px;
                    border-radius: 15px;
                    border: 2px solid #4169e1;
                    transition: transform 0.3s ease;
                }
                .link-card:hover {
                    transform: translateY(-5px);
                }
                a { 
                    color: #4169e1; 
                    text-decoration: none; 
                    font-size: 1.2em;
                }
                a:hover { 
                    color: #ff69b4; 
                }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>🏛️ Cathedral Research</h1>
                <p>A sophisticated platform for consciousness exploration and spiritual development</p>
                
                <div class="links">
                    <div class="link-card">
                        <h3>🌟 Emerald Tablet Learning Station</h3>
                        <a href="BUILDING CATHEDRALS/emerald-tablet-learning-station.html">Enter the Learning Station</a>
                    </div>
                    
                    <div class="link-card">
                        <h3>🔮 Octagram Tools</h3>
                        <a href="tools/">Explore Sacred Tools</a>
                    </div>
                    
                    <div class="link-card">
                        <h3>📚 Research Archive</h3>
                        <a href="research/">Browse Research</a>
                    </div>
                    
                    <div class="link-card">
                        <h3>🏗️ Building Cathedrals</h3>
                        <a href="BUILDING CATHEDRALS/">Development Hub</a>
                    </div>
                </div>
            </div>
        </body>
        </html>
        EOF
        fi
        
        echo "✅ Build completed successfully"

    - name: � Generate Build Report
      run: |
        echo "## 🏛️ Cathedral Research Build Report" >> $GITHUB_STEP_SUMMARY
        echo "**Node Version:** ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Build Status:** ✅ Success" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        
        if [ -d "dist" ]; then
          DIST_SIZE=$(du -sh dist | cut -f1)
          echo "**Distribution Size:** $DIST_SIZE" >> $GITHUB_STEP_SUMMARY
          
          FILE_COUNT=$(find dist -type f | wc -l)
          echo "**Total Files:** $FILE_COUNT" >> $GITHUB_STEP_SUMMARY
          
          HTML_COUNT=$(find dist -name "*.html" | wc -l)
          echo "**HTML Files:** $HTML_COUNT" >> $GITHUB_STEP_SUMMARY
          
          JS_COUNT=$(find dist -name "*.js" | wc -l)
          echo "**JavaScript Files:** $JS_COUNT" >> $GITHUB_STEP_SUMMARY
        fi

    - name: 📁 Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cathedral-build-${{ matrix.node-version }}
        path: dist/
        retention-days: 30

    - name: 📄 Setup Pages (Node 20 only)
      if: matrix.node-version == '20.x'
      uses: actions/configure-pages@v4

    - name: � Upload to GitHub Pages (Node 20 only)
      if: matrix.node-version == '20.x'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

  # Deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: 🚀 Upload to GitHub Pages (Node 20 only)
      if: matrix.node-version == '20.x'
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./dist

  # Security Audit Job
  security:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 🔐 Run Security Audit
      run: |
        npm audit --audit-level moderate
        npx audit-ci --moderate

    - name: 🔍 Run Dependency Check
      run: |
        npx depcheck
        npx npm-check --skip-unused

  # Performance Testing Job
  lighthouse:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 📦 Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: cathedral-build-20.x
        path: ./dist

    - name: 🏃‍♂️ Serve Build
      run: |
        npm install -g serve
        serve -s dist -l 3000 &
        sleep 5

    - name: 🔍 Run Lighthouse
      uses: treosh/lighthouse-ci-action@v9
      with:
        urls: |
          http://localhost:3000
          http://localhost:3000/cathedral
          http://localhost:3000/liber
          http://localhost:3000/grimoire
          http://localhost:3000/mystery
          http://localhost:3000/game
        uploadArtifacts: true
        temporaryPublicStorage: true

  # Deploy Job
  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, security]
    
    steps:
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

    - name: 📢 Deployment Notification
      run: |
        echo "## 🎉 Deployment Successful!" >> $GITHUB_STEP_SUMMARY
        echo "**Site URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
        echo "**Deployment Time:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Applications Deployed:**" >> $GITHUB_STEP_SUMMARY
        echo "- 🏛️ [Cathedral of Circuits](${{ steps.deployment.outputs.page_url }}cathedral)" >> $GITHUB_STEP_SUMMARY
        echo "- 🃏 [Liber Arcanae](${{ steps.deployment.outputs.page_url }}liber)" >> $GITHUB_STEP_SUMMARY
        echo "- 📚 [Stone Grimoire](${{ steps.deployment.outputs.page_url }}grimoire)" >> $GITHUB_STEP_SUMMARY
        echo "- 🏠 [Magical Mystery House](${{ steps.deployment.outputs.page_url }}mystery)" >> $GITHUB_STEP_SUMMARY
        echo "- 🎮 [Liber Arcanae Game](${{ steps.deployment.outputs.page_url }}game)" >> $GITHUB_STEP_SUMMARY

  # Repository Cleanup Job
  cleanup:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 🧹 Archive Old Repositories
      run: |
        # Create archive documentation
        cat > ARCHIVED_REPOSITORIES.md << EOF
        # 📁 Archived Repositories
        
        The following repositories have been consolidated into this monorepo:
        
        ## ✅ Integrated Repositories
        - \`cathedral\` → \`/apps/cathedral-of-circuits/\`
        - \`liber-arcanae\` → \`/apps/liber-arcanae/\`
        - \`codex-14499\` → \`/packages/codex-14499/\`
        - \`stone-grimoire\` → \`/apps/stone-grimoire/\`
        - \`tesseract-bridge\` → \`/packages/tesseract-bridge/\`
        - \`magical-mystery-house\` → \`/apps/magical-mystery-house/\`
        - \`liber-arcanae-game\` → \`/games/liber-arcanae/\`
        - \`BUILDING-CATHEDRALS\` → \`/BUILDING CATHEDRALS/\`
        - \`cathedral-docs\` → \`/docs/\`
        - \`cathedral-technical\` → \`/technical/\`
        
        ## 📊 Repository Statistics
        - **Total Repositories Consolidated:** 10
        - **Integration Date:** $(date)
        - **New Monorepo Structure:** Modern, scalable, interconnected
        
        ## 🔗 Cross-System Connections
        All systems now communicate through the **Tesseract Bridge** connection matrix,
        ensuring seamless data flow and unified user experience.
        
        ## 🚀 Benefits of Consolidation
        - **Single Source of Truth:** All code in one repository
        - **Unified Build System:** Shared dependencies and build pipeline
        - **Cross-System Integration:** Components can easily communicate
        - **Simplified Deployment:** Single deployment process for all apps
        - **Better Code Sharing:** Shared packages and utilities
        - **Consistent Quality:** Unified testing and linting
        EOF

        git add ARCHIVED_REPOSITORIES.md
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "📁 Document repository consolidation" || exit 0
        git push

    - name: 📋 Update Repository Topics
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.repos.replaceAllTopics({
            owner: context.repo.owner,
            repo: context.repo.repo,
            names: [
              'mystical-computing',
              'ai-enhanced-esoteric',
              'consciousness-exploration',
              'threejs',
              'webgl',
              'tarot',
              'divination',
              'sacred-geometry',
              'hermetic',
              'spiritual-technology',
              'interactive-art',
              'cathedral-architecture',
              'monorepo',
              'typescript',
              'react',
              'progressive-web-app'
            ]
          });

  # Notification Job
  notify:
    if: always()
    runs-on: ubuntu-latest
    needs: [build, security, lighthouse, deploy, cleanup]
    
    steps:
    - name: 📢 Build Status Summary
      run: |
        echo "## 🏛️ Cathedral Research - Build Complete" >> $GITHUB_STEP_SUMMARY
        echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "**Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Job Results:" >> $GITHUB_STEP_SUMMARY
        echo "- **Build:** ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Security:** ${{ needs.security.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Lighthouse:** ${{ needs.lighthouse.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deploy:** ${{ needs.deploy.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Cleanup:** ${{ needs.cleanup.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ needs.deploy.result }}" == "success" ]]; then
          echo "🎉 **Deployment successful!** The Cathedral systems are live and interconnected." >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ **Deployment issues detected.** Please check the logs above." >> $GITHUB_STEP_SUMMARY
        fi