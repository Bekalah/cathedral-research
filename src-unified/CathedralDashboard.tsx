/**
 * üèõÔ∏è Cathedral Universe Dashboard
 * Unified landing page for all apps, domains, and resources
 * Auto-generated by universe-sync.js
 */

import React, { useState } from 'react';
import characters from './data/characters.json';
import artEngine from './data/art-engine.json';
import musicEngine from './data/music-engine.json';
import realms from './data/realms.json';

// Import registry and unified data
import appsRegistry from '../registry/apps.json';
import mysticalData from '../data/unified-mystical-data.js';

const domainSections = [
  {
    id: 'art',
    title: 'Art & Visuals',
    description: 'Generative art, character tools, sacred geometry, and dataset-driven visuals.',
    apps: ['cathedral-of-circuits', 'stone-grimoire', 'arcanae-lab', 'lego-build-studio'],
    resources: [
      { name: 'Hilma af Klint Foundation', url: 'https://hilmaafklint.se/' },
      { name: 'Emma Kunz Center', url: 'https://www.emmakunz.com/' },
      { name: 'Met Museum API', url: 'https://collectionapi.metmuseum.org/public/collection/v1' }
    ]
  },
  {
    id: 'music',
    title: 'Music & Sound',
    description: 'Professional synthesis, sound archetypes, dataset sonification, and AI composition.',
    apps: ['synth-art-studio', 'synth-lab-pro', 'stone-grimoire'],
    resources: [
      { name: 'Spitfire LABS', url: 'https://labs.spitfireaudio.com/' },
      { name: 'Philharmonia Samples', url: 'https://philharmonia.co.uk/explore/sound-samples/' }
    ]
  },
  {
    id: 'science',
    title: 'Science & Data',
    description: 'Real dataset integration, visualization, and educational modules.',
    apps: ['arcanae-lab', 'cathedral-of-circuits', 'p5-codex-engine'],
    resources: [
      { name: 'NASA Image Library', url: 'https://images.nasa.gov/' },
      { name: 'D3.js', url: 'https://d3js.org/' },
      { name: 'Chart.js', url: 'https://www.chartjs.org/' }
    ]
  },
  {
    id: 'tech',
    title: 'Tech & Code',
    description: 'Modular engines, APIs, deployment scripts, and ND-safe standards.',
    apps: ['circuitum99', 'tesseract-bridge', 'three-engine'],
    resources: [
      { name: 'Three.js', url: 'https://threejs.org/' },
      { name: 'GitHub', url: 'https://github.com/Bekalah/cathedral-research' }
    ]
  }
];

function getAppInfo(appId) {
  return appsRegistry.apps.find(app => app.id === appId);
}


export default function CathedralDashboard() {
  const [selectedCharacter, setSelectedCharacter] = useState(characters[0]?.id || null);
  const activeCharacter = characters.find(c => c.id === selectedCharacter);

  return (
    <div className="cathedral-dashboard">
      <header className="dashboard-header">
        <h1>üèõÔ∏è Cathedral Universe</h1>
        <p>Unified creative platform for art, music, science, and technology</p>
        <div className="dashboard-art-preview">
          <img src={artEngine.featuredArt?.image} alt={artEngine.featuredArt?.title} style={{maxWidth:'480px',borderRadius:'16px',boxShadow:'0 8px 32px rgba(0,0,0,0.2)'}} />
          <div className="art-caption">{artEngine.featuredArt?.title} <span style={{fontStyle:'italic'}}>{artEngine.featuredArt?.artist}</span></div>
        </div>
      </header>
      <main>
        {domainSections.map(domain => (
          <section key={domain.id} className={`domain-section domain-${domain.id}`}> 
            <h2>{domain.title}</h2>
            <p>{domain.description}</p>
            <div className="apps-list">
              {domain.apps.map(appId => {
                const app = getAppInfo(appId);
                if (!app) return null;
                return (
                  <div key={app.id} className="app-card">
                    <h3>{app.name}</h3>
                    <p>{app.description}</p>
                    <span className="app-status">{app.status}</span>
                    {app.demoArt && <img src={app.demoArt} alt="Demo Art" style={{maxWidth:'220px',borderRadius:'8px',margin:'1em 0'}} />}
                    <a href={app.deployment?.production || '#'} target="_blank" rel="noopener noreferrer" className="app-link">Open App</a>
                  </div>
                );
              })}
            </div>
            <div className="resources-list">
              <h4>Resources</h4>
              <ul>
                {domain.resources.map(res => (
                  <li key={res.url}><a href={res.url} target="_blank" rel="noopener noreferrer">{res.name}</a></li>
                ))}
              </ul>
            </div>
            {domain.id === 'art' && (
              <div className="character-gallery">
                <h4>Featured Characters</h4>
                <div className="character-list">
                  {characters.map(char => (
                    <button key={char.id} className={`character-btn${selectedCharacter===char.id?' selected':''}`} onClick={()=>setSelectedCharacter(char.id)}>
                      <img src={char.image} alt={char.name} style={{width:'48px',height:'48px',borderRadius:'50%',marginRight:'8px'}} />
                      {char.name}
                    </button>
                  ))}
                </div>
                {activeCharacter && (
                  <div className="character-details">
                    <h5>{activeCharacter.name}</h5>
                    <img src={activeCharacter.image} alt={activeCharacter.name} style={{width:'120px',borderRadius:'16px',margin:'1em 0'}} />
                    <p>{activeCharacter.description}</p>
                    <div className="character-art">
                      <img src={activeCharacter.artwork} alt="Character Art" style={{maxWidth:'220px',borderRadius:'8px'}} />
                    </div>
                  </div>
                )}
              </div>
            )}
            {domain.id === 'music' && (
              <div className="music-engine-preview">
                <h4>Sound Archetype</h4>
                <div className="music-archetype-details">
                  <strong>{musicEngine.featuredArchetype?.name}</strong>
                  <p>{musicEngine.featuredArchetype?.description}</p>
                  <audio controls src={musicEngine.featuredArchetype?.demoAudio} style={{width:'100%'}} />
                </div>
              </div>
            )}
            {domain.id === 'science' && (
              <div className="realm-preview">
                <h4>Featured Realm</h4>
                <div className="realm-details">
                  <strong>{realms.featuredRealm?.name}</strong>
                  <p>{realms.featuredRealm?.description}</p>
                  <img src={realms.featuredRealm?.image} alt={realms.featuredRealm?.name} style={{maxWidth:'220px',borderRadius:'8px'}} />
                </div>
              </div>
            )}
          </section>
        ))}
      </main>
      <footer className="dashboard-footer">
        <p>¬© Cathedral Universe {new Date().getFullYear()} ‚Ä¢ All domains fused and working</p>
      </footer>
    </div>
  );
}
